name: Generate tool-config images

env:
  GITHUB_OUTPUT: ""

on:
  workflow_call:

jobs:
  tool-config:
    name: tool-config
    strategy:
      matrix:
        runner: [ubuntu-latest, arm-runner-2]
        include:
        - runner: ubuntu-latest
          platform: "linux/amd64"
          platform_short: "amd64"
        - runner: arm-runner-2
          platform: "linux/arm64"
          platform_short: "arm64"
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Preparation
        id: prep
        run: |
          IMAGE="tool-config"
          echo "image=${IMAGE,,}" >> $GITHUB_OUTPUT

      - name: Building ${{ matrix.platform_short }}
        run: true

      - name: Config docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login in to registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Publish Image
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: docker/tool-config.Dockerfile
          tags: "ghcr.io/${{ github.repository_owner }}/${{ steps.prep.outputs.image }}:${{ github.sha }}-${{ matrix.platform_short }}"
          platforms: ${{ matrix.platform }}
          provenance: false
          outputs: type=image

      - name: (PR Only) - Build image archive
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/tool-config.Dockerfile
          tags: "ghcr.io/${{ github.repository_owner }}/${{ steps.prep.outputs.image }}:${{ github.sha }}-${{ matrix.platform_short }}"
          platforms: ${{ matrix.platform }}
          outputs: type=docker,dest=${{ steps.prep.outputs.image }}-${{ matrix.platform_short }}-image.tar

      - name: (PR only) - Upload image archive as artifact
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.prep.outputs.image }}-${{ matrix.platform_short }}-image
          path: ${{ steps.prep.outputs.image }}-${{ matrix.platform_short }}-image.tar
          retention-days: 1
  merge: 
    name: merge multi-platform images
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs: tool-config
    steps:
      - name: Config docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Preparation
        id: prep
        run: |
          IMAGE="tool-config"
          echo "image=${IMAGE,,}" >> $GITHUB_OUTPUT

      - name: Login in to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          IMAGE="ghcr.io/${{ github.repository_owner }}/${{steps.prep.outputs.image}}:${{ github.sha }}"
          docker manifest create ${IMAGE} \
            --amend ${IMAGE}-arm64 \
            --amend ${IMAGE}-amd64
          docker manifest push ${IMAGE}